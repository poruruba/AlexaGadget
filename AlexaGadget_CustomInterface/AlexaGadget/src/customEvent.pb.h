/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.6 at Sat Jul 18 01:04:45 2020. */

#ifndef PB_CUSTOMEVENT_PB_H_INCLUDED
#define PB_CUSTOMEVENT_PB_H_INCLUDED
#include <pb.h>

#include "eventHeader.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _CustomEventProto_Event {
    header_EventHeaderProto header;
    char payload[1000];
/* @@protoc_insertion_point(struct:CustomEventProto_Event) */
} CustomEventProto_Event;

typedef struct _CustomEventProto {
    CustomEventProto_Event event;
/* @@protoc_insertion_point(struct:CustomEventProto) */
} CustomEventProto;

/* Default values for struct fields */

/* Initializer values for message structs */
#define CustomEventProto_init_default            {CustomEventProto_Event_init_default}
#define CustomEventProto_Event_init_default      {header_EventHeaderProto_init_default, ""}
#define CustomEventProto_init_zero               {CustomEventProto_Event_init_zero}
#define CustomEventProto_Event_init_zero         {header_EventHeaderProto_init_zero, ""}

/* Field tags (for use in manual encoding/decoding) */
#define CustomEventProto_Event_header_tag        1
#define CustomEventProto_Event_payload_tag       2
#define CustomEventProto_event_tag               1

/* Struct field encoding specification for nanopb */
extern const pb_field_t CustomEventProto_fields[2];
extern const pb_field_t CustomEventProto_Event_fields[3];

/* Maximum encoded size of messages (where known) */
#define CustomEventProto_size                    (1015 + header_EventHeaderProto_size)
#define CustomEventProto_Event_size              (1009 + header_EventHeaderProto_size)

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define CUSTOMEVENT_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
