/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.6 at Wed Jul 15 00:57:12 2020. */

#ifndef PB_EVENT_EVENTPARSER_PB_H_INCLUDED
#define PB_EVENT_EVENTPARSER_PB_H_INCLUDED
#include <pb.h>

#include "eventHeader.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef PB_BYTES_ARRAY_T(2048) event_EventParserProto_Event_payload_t;
typedef struct _event_EventParserProto_Event {
    header_EventHeaderProto header;
    event_EventParserProto_Event_payload_t payload;
/* @@protoc_insertion_point(struct:event_EventParserProto_Event) */
} event_EventParserProto_Event;

typedef struct _event_EventParserProto {
    event_EventParserProto_Event event;
/* @@protoc_insertion_point(struct:event_EventParserProto) */
} event_EventParserProto;

/* Default values for struct fields */

/* Initializer values for message structs */
#define event_EventParserProto_init_default      {event_EventParserProto_Event_init_default}
#define event_EventParserProto_Event_init_default {header_EventHeaderProto_init_default, {0, {0}}}
#define event_EventParserProto_init_zero         {event_EventParserProto_Event_init_zero}
#define event_EventParserProto_Event_init_zero   {header_EventHeaderProto_init_zero, {0, {0}}}

/* Field tags (for use in manual encoding/decoding) */
#define event_EventParserProto_Event_payload_tag 2
#define event_EventParserProto_Event_header_tag  1
#define event_EventParserProto_event_tag         1

/* Struct field encoding specification for nanopb */
extern const pb_field_t event_EventParserProto_fields[2];
extern const pb_field_t event_EventParserProto_Event_fields[3];

/* Maximum encoded size of messages (where known) */
#define event_EventParserProto_size              (2063 + header_EventHeaderProto_size)
#define event_EventParserProto_Event_size        (2057 + header_EventHeaderProto_size)

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define EVENTPARSER_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
